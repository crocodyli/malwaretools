param(
    [string]$CaminhoDoArquivo
)

Write-Host "                                                                                                         
@@@@@@@    @@@@@@   @@@  @@@  @@@  @@@@@@@@  @@@@@@@    @@@@@@   @@@  @@@  @@@@@@@@  @@@       @@@       
@@@@@@@@  @@@@@@@@  @@@  @@@  @@@  @@@@@@@@  @@@@@@@@  @@@@@@@   @@@  @@@  @@@@@@@@  @@@       @@@       
@@!  @@@  @@!  @@@  @@!  @@!  @@!  @@!       @@!  @@@  !@@       @@!  @@@  @@!       @@!       @@!       
!@!  @!@  !@!  @!@  !@!  !@!  !@!  !@!       !@!  @!@  !@!       !@!  @!@  !@!       !@!       !@!       
@!@@!@!   @!@  !@!  @!!  !!@  @!@  @!!!:!    @!@!!@!   !!@@!!    @!@!@!@!  @!!!:!    @!!       @!!       
!!@!!!    !@!  !!!  !@!  !!!  !@!  !!!!!:    !!@!@!     !!@!!!   !!!@!!!!  !!!!!:    !!!       !!!       
!!:       !!:  !!!  !!:  !!:  !!:  !!:       !!: :!!        !:!  !!:  !!!  !!:       !!:       !!:       
:!:       :!:  !:!  :!:  :!:  :!:  :!:       :!:  !:!      !:!   :!:  !:!  :!:        :!:       :!:      
 ::       ::::: ::   :::: :: :::    :: ::::  ::   :::  :::: ::   ::   :::   :: ::::   :: ::::   :: ::::  
 :         : :  :     :: :  : :    : :: ::    :   : :  :: : :     :   : :  : :: ::   : :: : :  : :: : :  
                                                                                                         
                                                                                                         
@@@@@@@@  @@@  @@@  @@@@@@@  @@@@@@@    @@@@@@    @@@@@@@  @@@@@@@   @@@@@@   @@@@@@@                    
@@@@@@@@  @@@  @@@  @@@@@@@  @@@@@@@@  @@@@@@@@  @@@@@@@@  @@@@@@@  @@@@@@@@  @@@@@@@@                   
@@!       @@!  !@@    @@!    @@!  @@@  @@!  @@@  !@@         @@!    @@!  @@@  @@!  @@@                   
!@!       !@!  @!!    !@!    !@!  @!@  !@!  @!@  !@!         !@!    !@!  @!@  !@!  @!@                   
@!!!:!     !@@!@!     @!!    @!@!!@!   @!@!@!@!  !@!         @!!    @!@  !@!  @!@!!@!                    
!!!!!:      @!!!      !!!    !!@!@!    !!!@!!!!  !!!         !!!    !@!  !!!  !!@!@!                     
!!:        !: :!!     !!:    !!: :!!   !!:  !!!  :!!         !!:    !!:  !!!  !!: :!!                    
:!:       :!:  !:!    :!:    :!:  !:!  :!:  !:!  :!:         :!:    :!:  !:!  :!:  !:!                   
 :: ::::   ::  :::     ::    ::   :::  ::   :::   ::: :::     ::    ::::: ::  ::   :::                   
: :: ::    :   ::      :      :   : :   :   : :   :: :: :     :      : :  :    :   : :                   

By: Caique Barqueta - https://twitter.com/crocodylii
"

# Verificar se o caminho do arquivo foi fornecido como argumento
if (-not $CaminhoDoArquivo) {
    Write-Host "INFORME O CAMINHO E ARQUIVO A SER ANALISADO."
    Exit
}

# Verificar se o arquivo .exe existe
if (-not (Test-Path $CaminhoDoArquivo) -or (Get-Item $CaminhoDoArquivo).Extension -ne ".exe") {
    Write-Host "O CAMINHO E ARQUIVO A SER ANALISADO NAO E VALIDO."
    Exit
}

# Inicializar uma string vazia para armazenar os resultados
$resultados = ""

# Calcular hashes
$hashes = @{
    SHA1   = (Get-FileHash -Path $CaminhoDoArquivo -Algorithm SHA1).Hash
    SHA256 = (Get-FileHash -Path $CaminhoDoArquivo -Algorithm SHA256).Hash
    MD5    = (Get-FileHash -Path $CaminhoDoArquivo -Algorithm MD5).Hash
}

# Obter strings do arquivo usando o strings.exe
$strings = & "C:\Program Files\Strings\strings.exe" -n 4 -a $CaminhoDoArquivo

# Salvar os resultados das strings em um arquivo
$NomeArquivoResultado = "${CaminhoDoArquivo}_Strings.txt"
$resultados = @"
Strings:
$strings
"@
$resultados | Out-File -FilePath $NomeArquivoResultado

# Salvar as hashes em um arquivo separado
$NomeArquivoHashes = "${CaminhoDoArquivo}_Hashes.txt"
$hashesString = @"
Hashes:
SHA1   : $($hashes['SHA1'])
SHA256 : $($hashes['SHA256'])
MD5    : $($hashes['MD5'])
"@
$hashesString | Out-File -FilePath $NomeArquivoHashes

# Expressões regulares
$ipRegex = '\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b'
$urlRegex = 'https?://\S+'
$domainRegex = '\b(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}\b'

# Encontrar correspondências de IPs, URLs e Domínios
$ips = [regex]::Matches($strings, $ipRegex)
$urls = [regex]::Matches($strings, $urlRegex)
$domains = [regex]::Matches($strings, $domainRegex)

# Salvar correspondências em arquivos separados
$ips | ForEach-Object { $_.Value } | Out-File -FilePath "${CaminhoDoArquivo}_IPs.txt"
$urls | ForEach-Object { $_.Value } | Out-File -FilePath "${CaminhoDoArquivo}_URLs.txt"
$domains | ForEach-Object { $_.Value } | Out-File -FilePath "${CaminhoDoArquivo}_Domains_and_DLL.txt"

Write-Host "ANALISE CONCLUIDA PARA O ARQUIVO $($CaminhoDoArquivo). RESULTADOS SALVOS NA PASTA DO .PS1."
